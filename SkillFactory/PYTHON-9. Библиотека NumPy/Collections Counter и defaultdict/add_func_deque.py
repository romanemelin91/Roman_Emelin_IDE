#ДОПОЛНИТЕЛЬНЫЕ ФУНКЦИИ

#reverse позволяет поменять порядок элементов в очереди на обратный:

from collections import deque

dq = deque([1,2,3,4,5])
print(dq)
# deque([1, 2, 3, 4, 5])
 
dq.reverse()
print(dq)
# deque([5, 4, 3, 2, 1])

# заданных элементов из конца очереди в начало:

dq = deque([1,2,3,4,5])
print(dq)
# deque([1, 2, 3, 4, 5])
 
dq.rotate(2)
print(dq)
# deque([4, 5, 1, 2, 3])

#Элементы можно переносить и из начала в конец:

dq = deque([1,2,3,4,5])
print(dq)
# deque([1, 2, 3, 4, 5])
 
# Отрицательное значение аргумента переносит
# n элементов из начала в конец
dq.rotate(-2)
print(dq)
# deque([3, 4, 5, 1, 2])

#Функция index позволяет найти первый индекс искомого элемента, 
#а count позволяет подсчитать, сколько раз элемент встретился в очереди 
#(функции аналогичны одноимённым функциям для списков):

dq = [1,2,4,2,3,1,5,4,4,4,4,4,3]
print(dq.index(4))
# 2
print(dq.count(4))
# 6

#Обратите внимание, что при попытке узнать индекс несуществующего элемента возникнет ValueError:

#dq = deque([1,2,4,2,3,1,5,4,4,4,4,4,3])
#print(dq.index(25))
# ValueError: 25 is not in deque

#А вот посчитать несуществующий элемент можно (получится просто 0):

dq = deque([1,2,4,2,3,1,5,4,4,4,4,4,3])
print(dq.count(25))
# 0